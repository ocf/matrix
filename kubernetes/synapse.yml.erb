apiVersion: v1
kind: Service
metadata:
  name: matrix-service
spec:
  selector:
    app: matrix
  ports:
    - name: matrix-port
      port: 80
      targetPort: 8008
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matrix-synapse
  labels:
    app: matrix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matrix
  template:
    metadata:
      labels:
        app: matrix
    spec:
      containers:
        - name: matrix-synapse
          image: "docker.ocf.berkeley.edu/synapse:<%= version %>"
          imagePullPolicy: Always
          ports:
            - containerPort: 8008
          volumeMounts:
            - name: vol
              mountPath: /data
            - name: synapse-config
              mountPath: /etc/matrix-synapse
              readOnly: true
            - name: matrix-secrets
              mountPath: /etc/matrix-shared
              readOnly: true
            - name: bridge-config
              mountPath: /etc/matrix-bridge
              readOnly: true
            - name: discord-config
              mountPath: /etc/discord-bridge
              readOnly: true
            - name: slack-config
              mountPath: /etc/slack-bridge
              readOnly: true
          env:
            - name: "SYNAPSE_CONFIG_PATH"
              value: "/etc/matrix-synapse/homeserver.yaml"
          resources:
            requests:
              cpu: "2"
              memory: "4Gi"
            limits:
              cpu: "4"
              memory: "8Gi"
      volumes:
        - name: vol
          persistentVolumeClaim:
            claimName: matrix-vol
        - name: synapse-config
          secret:
            secretName: synapse-config
        - name: bridge-config
          secret:
            secretName: bridge-config
        - name: discord-config
          secret:
            secretName: discord-config
        - name: slack-config
          secret:
            secretName: slack-config
        - name: matrix-secrets
          hostPath:
            path: /opt/share/kubernetes/secrets/matrix
            type: Directory
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: virtual-host-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 80m
spec:
  rules:
    - host: matrix.ocf.berkeley.edu
      http:
        paths:
          - backend:
              serviceName: matrix-service
              servicePort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: matrix-vol
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: managed-nfs-storage
